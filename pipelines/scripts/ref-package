#!/usr/bin/env python3

__copyright__ = "Copyright (c) Microsoft Corporation."

import os
import sys
import subprocess
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))  # noqa E402

from lsgtools import log
from lsgtools import cli
from lsgtools.virt.mshv import kernel

arg_parser = cli.create_arg_parser(prog="ref-package",
                                   description="Packaging tool")
arg_parser.add_argument("version", action="store", nargs="?",
                        help="Version or tag name. If omitted, current checkout version is used.")
args = arg_parser.parse_args()
log.set_verbosity(args.verbose)

if args.version is None:
    version = kernel.get_version_local()
    ref = "HEAD"
else:
    version = kernel.get_version_from_tag(args.version)
    # Ref might look like refs/tags/msft/mshv-rolling/5.15.74.mshv3.
    if len(args.version.split("/")) > 3:
        ref = args.version[len("refs/tags/"):]
    else:
        ref = args.version


tarball_format = kernel.get_tarball_format()
tarball_prefix = kernel.build_tarball_prefix(version)
tarball_tar = kernel.build_tar_name(version)
tarball_name = kernel.build_tgz_name(version)

log.info("Packaging '{}' based on '{}'".format(tarball_name, ref))

cmds = [
         ["git", "archive", "--format={}".format(tarball_format),
             "--prefix={}/".format(tarball_prefix),
             "--output={}".format(tarball_tar), ref],
         # TODO add more things to filter out from the tarball
         ["tar", "--delete", "-f", tarball_tar, "{}/pipelines".format(tarball_prefix)],
         ["gzip", "-9", tarball_tar]
    ]

for cmd in cmds:
    log.debug(" ".join(cmd))
    res = subprocess.run(cmd)
    if 0 != res.returncode:
        err = res.stderr.decode("ascii")
        raise Exception(err)
